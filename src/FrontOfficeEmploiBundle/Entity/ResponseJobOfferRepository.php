<?php

namespace FrontOfficeEmploiBundle\Entity;

use Doctrine\ORM\EntityRepository;

/**
 * ResponseJobOfferRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class ResponseJobOfferRepository extends EntityRepository
{
	# Retourne les differentes reponses obtenues par une jobOffer:
	public function getJobOfferResponse($jobOffer_id)
	{
		$query = $this -> getEntityManager()-> createQuery('
			SELECT r 
			FROM FrontOfficeEmploiBundle:ResponseJobOffer r 
			JOIN  r.jobOffer j
			WHERE j.id LIKE :id')
		->setParameter('id', $jobOffer_id);

		return $query -> getResult();
	}

	# Retourne les reponses obtenues par la jobOffer et selon l'user passes en parametres.
	# Query utilisee pour selectionner les reponses envoyees par un user a une jobOffer 
	# dans son espace perso:
	public function getJobOfferResponseByUser($jobOffer_id, $user_id)
	{
		$query = $this -> getEntityManager()-> createQuery('
			SELECT r 
			FROM FrontOfficeEmploiBundle:ResponseJobOffer r 
			JOIN  r.jobOffer j
			JOIN r.user u
			WHERE j.id LIKE :jobOffer_id
			AND u.id  LIKE :user_id')
		->setParameter('jobOffer_id', $jobOffer_id)
		->setParameter('user_id', $user_id);

		return $query -> getResult();
	}	

	# Retourne les reponses obtenues par la jobOffer et selon la society passees en parametres.
	# Sera utilisee dans le backOffice pour permettre a l'admin 
	# de selectionner les reponses obtenues par society et par jobOffer:
	public function getJobOfferResponseBySociety($jobOffer_id, $society_id)
	{
		$query = $this -> getEntityManager()-> createQuery('
			SELECT r 
			FROM FrontOfficeEmploiBundle:ResponseJobOffer r 
			JOIN r.jobOffer j 
			JOIN j.society s 
			WHERE j.id LIKE :jobOffer_id
			AND s.id LIKE :society_id')
		->setParameter('jobOffer_id', $jobOffer_id)
		->setParameter('society_id', $society_id);

		return $query -> getResult();
	}
	
}
